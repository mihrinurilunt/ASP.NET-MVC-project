// <auto-generated />
using System;
using CupcakeMVC.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CupcakeMVC.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221229111838_mssql_migration_470")]
    partial class mssqlmigration470
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CupcakeMVC.Models.Dessert", b =>
                {
                    b.Property<int>("DessertId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DessertId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DessertPhotoURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("DessertId");

                    b.ToTable("Desserts");
                });

            modelBuilder.Entity("CupcakeMVC.Models.DoubleMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DessertId")
                        .HasColumnType("int");

                    b.Property<int>("DoubleMenuCategory")
                        .HasColumnType("int");

                    b.Property<int>("DrinksId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DessertId");

                    b.HasIndex("DrinksId");

                    b.ToTable("DoubleMenus");
                });

            modelBuilder.Entity("CupcakeMVC.Models.Drinks", b =>
                {
                    b.Property<int>("DrinksId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DrinksId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DrinkPhotoURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("DrinksId");

                    b.ToTable("Drink");
                });

            modelBuilder.Entity("CupcakeMVC.Models.DoubleMenu", b =>
                {
                    b.HasOne("CupcakeMVC.Models.Dessert", "Desserts")
                        .WithMany("DoubleMenus")
                        .HasForeignKey("DessertId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CupcakeMVC.Models.Drinks", "Drinks")
                        .WithMany("DoubleMenus")
                        .HasForeignKey("DrinksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Desserts");

                    b.Navigation("Drinks");
                });

            modelBuilder.Entity("CupcakeMVC.Models.Dessert", b =>
                {
                    b.Navigation("DoubleMenus");
                });

            modelBuilder.Entity("CupcakeMVC.Models.Drinks", b =>
                {
                    b.Navigation("DoubleMenus");
                });
#pragma warning restore 612, 618
        }
    }
}
